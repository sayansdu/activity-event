package kz.jazzsoft.bnd.event.ui.view.tree;import java.io.File;import java.util.ArrayList;import java.util.List;import com.vaadin.ui.Tree;@SuppressWarnings("serial")public class LeftTree extends Tree{			 String current_day="Current Date", 	    	restored_day="Archives",	 		directory;	 List<String> files_name = new ArrayList<String>();	 List<String> years = new ArrayList<String>();	 List<String> months = new ArrayList<String>();	 	 public LeftTree() {        setWidth("200px");        setHeight("100%");        setVisible(false);    	addItem(current_day);    	addItem(restored_day);  	 }	    /**     * Remove all elements from tree and save again all elements from updated directory     */    public void refresh(){    	removeAllItems();    	addItem(current_day);    	setChildrenAllowed(current_day, false);    	addItem(restored_day);     	    	File files = new File(directory);    	if(files.exists()){    		for (File file : files.listFiles()) {    			if(file.getName().startsWith("."))    				continue;//    			addItem(file.getName());//    			setChildrenAllowed(file.getName(), false);//				setParent(file.getName(), restored_day);    			files_name.add(file.getName());    			setYears(file.getName());    			setMonths(file.getName());			}    		    		for (String str : years) {				addItem(str);				setParent(str, restored_day);							}    		    		for (String str : months) {				if(years.contains(str.split("-")[0])){					addItem(GetMonths.all_months.get(str.split("-")[1]));					setParent(GetMonths.all_months.get(str.split("-")[1]), str.split("-")[0]);				}			}    		    		for (String str : files_name) {				if(years.contains(str.split("-")[0])){										if(months.contains(str.split("-")[0]+"-"+str.split("-")[1])){												addItem(str);						setParent(str, GetMonths.all_months.get(str.split("-")[1]));						setChildrenAllowed(str, false);					}				}			}    		    	}    	else     		System.out.println("File don't exist");    	    return;    }        private void setYears(String year){    	if(years.isEmpty())    		years.add(year.split("-")[0]);    	if(!years.contains(year.split("-")[0]))    		years.add(year.split("-")[0]);    }        private void setMonths(String month){    	if(months.isEmpty()){    		months.add(month.split("-")[0]+"-"+month.split("-")[1]);    		    	}    	if(!months.contains(month.split("-")[0])){    		months.add(month.split("-")[0]+"-"+month.split("-")[1]);    		    	}    }        /**     * update all item for localizations     */    public void updateItems(String current, String archives){    	removeAllItems();    	current_day = current;    	restored_day = archives;    	addItem(current_day);    	addItem(restored_day);    	refresh();    }        /**     * set value to directory variable     * @param directory - get archives directory from PgSQLOperation class      */    public void setDirectory(String directory){    	this.directory = directory;    }        /**     * return current_day value,     * use to check if selected item is current_version or archives     */    public String getCurrentDay(){    	return current_day;    }}